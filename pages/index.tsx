import Head from 'next/head'
import { SubmitHandler, useForm } from 'react-hook-form'

enum GenderEnum {
  female = 'female',
  male = 'male',
  other = 'other',
}

type Inputs = {
  example: string
  exampleRequired: string
  gender: GenderEnum
}

export default function Home() {
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<Inputs>()
  const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data)

  console.log(watch('example')) // watch input value by passing the name of it

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={'h-auto w-auto'}>
        <form className="flex flex-col" onSubmit={handleSubmit(onSubmit)}>
          {/* register your input into the hook by invoking the "register" function */}
          <input className="border-2 border-solid border-red-300" defaultValue="test" {...register('example')} />

          {/* include validation with required or other standard HTML validation rules */}
          <input
            className="border-2 border-solid border-green-300 "
            {...register('exampleRequired', { required: true })}
          />
          <label>Gender Selection</label>
          <select {...register('gender')}>
            <option value="female">female</option>
            <option value="male">male</option>
            <option value="other">other</option>
          </select>
          {/* errors will return when field validation fails  */}
          {errors.exampleRequired && <span>This field is required</span>}
          <input className="bg-blue-300" type="submit" />
        </form>
      </main>
    </>
  )
}
